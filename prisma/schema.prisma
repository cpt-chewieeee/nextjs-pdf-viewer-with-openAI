// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  //output   = "../prisma/generated/prisma" // comment this out if you want to have generate files in node_modules/.bin/.prisma/client
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model PdfUpload {
  id Int @id @default(autoincrement())
  filename String


  sizeBytes Int @map("size_bytes")
  cid String
  fullUrl String @map("full_url")
  uploadedBy Int @map("uploaded_by")
  createdAt DateTime @default(now()) @map(name: "created_at")

  user User @relation(fields: [uploadedBy], references: [id], onDelete: Cascade)


  @@map("pdf_uploads")

  @@index([uploadedBy])
}

model User {
  id Int @id @default(autoincrement())
  name String?
  email String? @unique
  password String
  emailVerified DateTime? @map("email_verified")
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")

  uploads PdfUpload[]
  sessions ChatSession[]


  @@map(name: "users")
}
model ChatSession {
  id Int @id @default(autoincrement())
  title String?
  userId Int @map("user_id")
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  messages  ChatMessage[]

  @@map("chat_sessions")
  @@index([userId])
}

model ChatMessage {
  id Int @id @default(autoincrement())
  sessionId Int @map("session_id")
  content String

  createdAt DateTime @default(now()) @map(name: "created_at")

  session ChatSession @relation(fields: [sessionId], references: [id], onDelete: Cascade)

  @@map("chat_messages")
  @@index([sessionId])
}
